########
# NOTE: 
#
# This is a pre-push hook. 
# If it exits with an error code, it will cancel a Git push.
#
# It runs:
#   - a TypeScript "linter"
#   - eslint
#
# If either fail, it prints out an error message and exits with an error code.
########

# NOTE: Don't fail immediately after error
# This allows us to echo messages even if the linter exits with an error.
set +e  

# NOTE: Run the TypeScript "linter".
# --silent to keep pnpm from echoing
pnpm --silent lint:ts

# NOTE: Capture linter exit status.
LINT_STATUS=$?

# NOTE: If TypeScript linting failed, inform user how to proceed and exit.
if [[ $LINT_STATUS != 0 ]]; then
  echo "
To print a list of TypeScript errors:
  pnpm lint:ts

To skip this verification and push anyway (not recommended):
  git push --no-verify <...>
"
# NOTE: Exit without performing more checks to save user time.
# NOTE: +e was set, so we have to return an exit status.
exit $LINT_STATUS
fi

# NOTE: Run eslint.
# --silent keeps pnpm from echoing
# --max-warnings=0 causes linting to fail on errors *and* warnings
pnpm --silent lint:eslint --max-warnings=0

# NOTE: Capture linter exit status.
LINT_STATUS=$?

# NOTE: If linting failed, inform user how to proceed.
if [[ $LINT_STATUS != 0 ]]; then
  echo "
To fix linter problems:
  pnpm lint --fix  – fix automatically fixable problems
  pnpm lint        – print a list of problems to fix by hand

To skip this verification and push anyway (not recommended):
  git push --no-verify <...>
"
fi

# NOTE: +e was set, so we have to return an exit status.
exit $LINT_STATUS